name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release to create'
        required: true
        default: 'beta'
        type: choice
        options:
          - beta
          - stable
      dry_run:
        description: 'Perform a dry run (no actual publishing)'
        required: false
        default: false
        type: boolean
      force_release:
        description:
          'Force a release even if no conventional commits warrant one'
        required: false
        default: false
        type: boolean
      version_bump:
        description: 'Version bump type (only used when force_release is true)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  validate:
    runs-on: pub-hk-ubuntu-24.04-ip
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm run lint

      - name: Run type checking
        run: pnpm run type-check

      - name: Run tests
        run: pnpm test

  release-please:
    needs: validate
    if:
      ${{ github.ref_name == 'main' || github.event.inputs.release_type ==
      'beta' }}
    runs-on: pub-hk-ubuntu-24.04-ip
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      pr_number: ${{ steps.release.outputs.pr_number }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
          skip-github-pull-request: ${{ github.event.inputs.dry_run == 'true' }}
          release-as:
            ${{ github.event.inputs.force_release == 'true' &&
            github.event.inputs.version_bump ||
            (github.event.inputs.release_type == 'beta' && 'prerelease') || ''
            }}

  publish:
    needs: release-please
    if:
      ${{ needs.release-please.outputs.release_created ||
      github.event.inputs.force_release == 'true' }}
    runs-on: pub-hk-ubuntu-24.04-ip
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.tag_name || github.sha }}

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Use latest pnpm version
        run: corepack use pnpm@latest-10

      - name: Install dependencies
        run: pnpm install

      - name: Handle force release version bump
        if:
          ${{ github.event.inputs.force_release == 'true' &&
          needs.release-please.outputs.release_created != 'true' }}
        run: |
          echo "Applying force release version bump: ${{ github.event.inputs.version_bump }}"
          npm version ${{ github.event.inputs.version_bump }} --no-git-tag-version
          echo "{\".\": \"$(node -p "require('./package.json').version")\"}" > .release-please-manifest.json

      - name: Build package
        run: pnpm run build

      - name: Run tests with new version
        run: pnpm test

      - name: Publish to npm
        run: |
          if [ "${{ github.event.inputs.dry_run }}" = "true" ]; then
            echo "DRY RUN: Validating publish process..."
            if [ "${{ github.event.inputs.release_type }}" = "stable" ]; then
              pnpm publish --dry-run --provenance --no-git-checks
            else
              pnpm publish --dry-run --tag beta --provenance --no-git-checks
            fi
          else
            echo "Publishing version $(node -p "require('./package.json').version") to npm..."
            if [ "${{ github.event.inputs.release_type }}" = "stable" ]; then
              pnpm publish --provenance --no-git-checks
            else
              pnpm publish --tag beta --provenance --no-git-checks
            fi
            echo "Successfully published version $(node -p "require('./package.json').version")"
          fi
